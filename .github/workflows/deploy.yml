name: production

on:
  push:
    branches: ["main"]

jobs:
  deploy_go:
    runs-on: self-hosted
    environment:
      name: production
      url: http://go.tangzhenming.com
    steps:
      - name: Notify the DingTalk group that the current project has been started deployment
        run: |
          curl 'https://oapi.dingtalk.com/robot/send?access_token=${{ secrets.Ding_Bot_ACCESS_TOKEN }}' \
          -H 'Content-Type: application/json' \
          -d '{"msgtype": "text","text": {"content":"主人主人，我要开始部署 API_GO 啦 ☺️"}}'
      - uses: actions/checkout@v3
      - name: Create env file
        run: |
          echo "DB_DSN=${{ secrets.DB_DSN }}" > .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "CORS_ALLOW_ORIGINS=${{ secrets.CORS_ALLOW_ORIGINS }}" >> .env
      - name: Run docker compose
        run: docker compose up --build -d
      - name: Notify the DingTalk group that the current project has been successfully deployed
        run: |
          curl 'https://oapi.dingtalk.com/robot/send?access_token=${{ secrets.Ding_Bot_ACCESS_TOKEN }}' \
          -H 'Content-Type: application/json' \
          -d '{"msgtype": "text","text": {"content":"主人主人，API_GO 部署成功！✌🏻"},"at":{"isAtAll": true}}'
